{"version":3,"sources":["components/TableBlock/TableBlock.module.scss","components/TotalTable/TotalTable.module.scss","components/App/App.module.scss","helpers/fixedNum.js","components/TableBlock/TableBlock.jsx","components/TotalTable/TotalTable.jsx","components/App/App.jsx","index.js"],"names":["module","exports","fixedNum","num","symbols","parseFloat","Number","toFixed","TableBlock","data","coinsPrice","Object","keys","map","coin","orderAmount","reduce","reducer","row","averagePrice","filter","length","total","currentValue","diff","className","styles","tableWrapper","Table","table","variant","title","colSpan","slice","header","classNames","totalRow","positive","negative","TotalTable","current","red","console","log","titleRow","App","useState","JSON","parse","localStorage","getItem","setData","setCoinsPrice","fetchRates","forEach","a","fetch","then","response","json","symbol","price","prevState","error","handleChange","e","files","target","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","includes","coins","Array","from","Set","item","results","setItem","stringify","readAsArrayBuffer","handleFile","useEffect","timerId","setInterval","clearInterval","app","Container","input","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3de501bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"TableBlock_tableWrapper__3TZFm\",\"table\":\"TableBlock_table__3J1J1\",\"title\":\"TableBlock_title__oqcT7\",\"header\":\"TableBlock_header__34bI2\",\"totalRow\":\"TableBlock_totalRow__8iUvp\",\"positive\":\"TableBlock_positive__2JUG4\",\"negative\":\"TableBlock_negative__3iLEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"TotalTable_tableWrapper__2szHx\",\"table\":\"TotalTable_table__Mltg9\",\"titleRow\":\"TotalTable_titleRow__1YDvm\",\"totalRow\":\"TotalTable_totalRow__3L-Et\",\"positive\":\"TotalTable_positive__2hvRs\",\"negative\":\"TotalTable_negative__1i0YO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BT4Y\",\"input\":\"App_input__1k4p7\"};","const fixedNum = (num, symbols) => parseFloat(Number(num).toFixed(symbols));\n\nexport default fixedNum;\n","import { Table } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport fixedNum from '../../helpers/fixedNum';\n\nimport styles from './TableBlock.module.scss';\n\nconst TableBlock = ({ data, coinsPrice }) => {\n\n  return Object.keys(data).map(coin => {\n\n      const orderAmount = data[coin].reduce((reducer, row) => row[2] === 'BUY' ? reducer + +row[4] : reducer - +row[4], 0) * (1 - 0.001);\n      const averagePrice = fixedNum((data[coin].reduce((reducer, row) => row[2] === 'BUY' && reducer + +row[5], 0)) / data[coin].filter(coin => coin[2] === 'BUY').length, 4);\n      const total = fixedNum(data[coin].reduce((reducer, row) => row[2] === 'BUY' ? reducer + +row[7] : reducer - +row[7], 0), 2);\n      const currentValue = fixedNum(coinsPrice[coin] * orderAmount, 2);\n      const diff = fixedNum(currentValue - total, 2);\n\n      return (total >= 1 && <div className={styles.tableWrapper}>\n          <Table className={styles.table} key={coin} variant='dark'>\n            <thead>\n            <tr className={styles.title}>\n              <th colSpan='9'>{coin.slice(0, -4)}</th>\n            </tr>\n            <tr className={styles.header}>\n              <th>Date</th>\n              <th>Type</th>\n              <th>Order Amount</th>\n              <th>Fee</th>\n              <th>Price</th>\n              <th>Total</th>\n              <th>Current Price</th>\n              <th>Current Value</th>\n              <th>Diff</th>\n            </tr>\n            </thead>\n            <tbody>\n            {data[coin].map(row => (\n              <tr key={row[0]}>\n                <td>{row[0]}</td>\n                <td>{row[2]}</td>\n                <td>{row[4]}</td>\n                <td>{fixedNum(row[4] - row[4] * (1 - 0.001), 8)}</td>\n                <td>{fixedNum(row[5], 4)}</td>\n                <td>${fixedNum(row[7], 2)}</td>\n                <td />\n                <td />\n                <td />\n              </tr>\n            ))}\n            <tr className={classNames(styles.totalRow, { [styles.positive]: diff >= 0, [styles.negative]: diff < 0 })}>\n              <td>Total</td>\n              <td />\n              <td colSpan='2'>{fixedNum(orderAmount, 5)}</td>\n              <td>{averagePrice}</td>\n              <td>${total}</td>\n              <td>{fixedNum(coinsPrice[coin], 4) || 'Pending...'}</td>\n              <td>{currentValue || 'Pending...'}</td>\n              <td>{diff || 'Pending...'}</td>\n            </tr>\n            </tbody>\n          </Table>\n        </div>\n      );\n    }\n  );\n};\n\nexport default TableBlock;\n","import { Table } from 'react-bootstrap';\nimport { useState } from 'react';\n\nimport fixedNum from '../../helpers/fixedNum';\n\nimport styles from './TotalTable.module.scss';\nimport classNames from 'classnames';\n\nconst TotalTable = ({ data, coinsPrice }) => {\n\n  const total = Object.keys(data).reduce((reducer, coin) => {\n    return reducer + fixedNum(data[coin].reduce((reducer, row) => row[2] === 'BUY' ? reducer + +row[7] : reducer - +row[7], 0), 2);\n  }, 0);\n  const current = Object.keys(data).reduce((reducer, coin) => {\n    const orderAmount = data[coin].reduce((red, row) => row[2] === 'BUY' ? red + +row[4] : red - +row[4], 0) * (1 - 0.001);\n    console.log(orderAmount);\n    return reducer + (orderAmount * coinsPrice[coin]);\n  }, 0);\n  const diff = fixedNum(current - total, 2);\n\n  return (<div className={styles.tableWrapper}>\n      <Table className={styles.table}>\n        <thead>\n        <tr className={styles.titleRow}>\n          <th>Total Spend</th>\n          <th>Current Value</th>\n          <th>Diff</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr className={classNames(styles.totalRow, { [styles.positive]: diff >= 0, [styles.negative]: diff < 0 })}>\n          <td>{fixedNum(total, 2)}$</td>\n          <td>{fixedNum(current, 2)}$</td>\n          <td>{diff}$</td>\n        </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TotalTable;\n","import { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport XLSX from 'xlsx';\nimport { RecoilRoot } from 'recoil';\n\nimport TableBlock from '../TableBlock';\nimport TotalTable from '../TotalTable';\n\nimport styles from './App.module.scss';\n\nconst App = () => {\n\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')));\n  const [coinsPrice, setCoinsPrice] = useState({});\n\n  const fetchRates = () => {\n    data && Object.keys(data).forEach(async coin => {\n      try {\n        await fetch(`https://api1.binance.com/api/v3/ticker/price?symbol=${coin}`)\n        .then(response => response.json())\n        .then(({ symbol, price }) => setCoinsPrice(prevState => ({ ...prevState, [symbol]: price })));\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  };\n\n  const handleFile = (file) => {\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    reader.onload = e => {\n      /* Parse data */\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 })\n      .filter(row => row.includes('BUY') || row.includes('SELL'));\n\n      const coins = Array.from(new Set(data.map(item => item[1])));\n\n      const results = {};\n\n      coins.forEach(coin => {\n        results[coin] = data.filter(item => item[1] === coin);\n      });\n\n      setData(results);\n      localStorage.setItem('data', JSON.stringify(results));\n    };\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    }\n  };\n\n  const handleChange = (e) => {\n    const files = e.target.files;\n    if (files && files[0]) handleFile(files[0]);\n  };\n\n  useEffect(() => {\n    fetchRates();\n    const timerId = setInterval(() => {\n      fetchRates();\n    }, 10000);\n\n    return () => clearInterval(timerId);\n\n  }, [data]);\n\n  return (\n    <RecoilRoot>\n      <div className={styles.app}>\n        <Container>\n          <input className={styles.input} onChange={(e) => handleChange(e)} type='file' />\n          {data && <TotalTable data={data} coinsPrice={coinsPrice} />}\n          {data && <TableBlock data={data} coinsPrice={coinsPrice} />}\n        </Container>\n      </div>\n    </RecoilRoot>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}